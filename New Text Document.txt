<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ƒêua V·ªãt - G·ªçi T√™n Ng·∫´u Nhi√™n</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Th∆∞ vi·ªán ph√°o gi·∫•y -->
    <script src="https://cdn.jsdelivr.net/npm/canvas-confetti@1.9.2/dist/confetti.browser.min.js"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;700&display=swap');
        body {
            font-family: 'Inter', sans-serif;
            background-color: #e0f2fe;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            padding: 2rem;
            flex-direction: column;
        }
        .game-container {
            background: #fff;
            padding: 2rem;
            border-radius: 1rem;
            box-shadow: 0 10px 20px rgba(0,0,0,0.1);
            max-width: 900px;
            width: 100%;
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
        }
        .header {
            text-align: center;
        }
        .header h1 {
            font-size: 2.5rem;
            font-weight: bold;
            color: #1a202c;
        }
        .header p {
            color: #4a5568;
            margin-top: 0.5rem;
        }
        .controls {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }
        .textarea-container {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }
        textarea {
            width: 100%;
            border-radius: 0.5rem;
            border: 1px solid #cbd5e0;
            padding: 0.75rem;
            font-size: 1rem;
            resize: vertical;
        }
        .button-group {
            display: flex;
            justify-content: center;
            gap: 1rem;
        }
        .race-track {
            background: linear-gradient(to bottom, #63b3ed, #4299e1); /* Hi·ªáu ·ª©ng n∆∞·ªõc */
            border-radius: 1rem;
            padding: 1.5rem;
            position: relative;
            overflow: hidden;
            box-shadow: inset 0 0 10px rgba(0,0,0,0.3);
            border: 5px solid #38a169; /* Th·∫£m c·ªè */
        }
        .duck-lane {
            display: flex;
            align-items: center;
            height: 50px;
            margin-bottom: 0.5rem;
        }
        .duck {
            font-size: 2.5rem;
            transition: transform 0.1s linear;
            position: relative;
            left: 0;
            z-index: 10;
            /* ƒê·∫£o chi·ªÅu bi·ªÉu t∆∞·ª£ng v·ªãt ƒë·ªÉ n√≥ h∆∞·ªõng v·ªÅ ph√≠a tr∆∞·ªõc */
            transform: scaleX(-1);
        }
        .duck-name {
            font-size: 0.875rem;
            color: #fff;
            font-weight: bold;
            text-shadow: 1px 1px 2px rgba(0,0,0,0.5);
            margin-left: 0.5rem;
            z-index: 5;
        }
        .winner-box {
            text-align: center;
            padding: 1rem;
            border-radius: 0.5rem;
            background-color: #f7fafc;
            border: 2px solid #38a169;
        }
        .winner-box.hidden {
            display: none;
        }
        .winner-box h2 {
            font-size: 1.5rem;
            font-weight: bold;
            color: #38a169;
        }
        .reset-btn {
            background-color: #e53e3e;
        }
        .reset-btn:hover {
            background-color: #c53030;
        }
        .start-btn {
            background-color: #38a169;
        }
        .start-btn:hover {
            background-color: #2f855a;
        }
        button {
            padding: 0.75rem 2rem;
            border-radius: 0.5rem;
            color: #fff;
            font-weight: bold;
            transition: background-color 0.3s;
        }

        .finish-line {
            position: absolute;
            right: 0;
            top: 0;
            bottom: 0;
            width: 10px;
            background-color: #fff;
            border-left: 2px dashed #000;
            z-index: 20;
        }
    </style>
</head>
<body>

    <div class="game-container">
        <div class="header">
            <h1>ƒêua V·ªãt - G·ªçi T√™n Ng·∫´u Nhi√™n</h1>
            <p>Danh s√°ch h·ªçc sinh l·ªõp 3.1 ƒë√£ ƒë∆∞·ª£c t·∫£i t·ª± ƒë·ªông. Nh·∫•n "B·∫Øt ƒë·∫ßu cu·ªôc ƒëua"!</p>
        </div>

        <div class="controls">
            <!-- N√∫t b·∫Øt ƒë·∫ßu v√† ch∆°i l·∫°i -->
            <div class="button-group">
                <button id="start-race-btn" class="start-btn">B·∫Øt ƒë·∫ßu cu·ªôc ƒëua</button>
                <button id="reset-game-btn" class="reset-btn">Ch∆°i l·∫°i</button>
            </div>
        </div>
        
        <div id="winner-display" class="winner-box hidden">
            <h2>H·ªçc sinh ƒë∆∞·ª£c ch·ªçn l√†: <span id="winner-name">...</span></h2>
        </div>

        <div id="duck-race-track" class="race-track">
            <!-- V·∫°ch ƒë√≠ch ƒë∆∞·ª£c th√™m v√†o ƒë√¢y -->
            <div class="finish-line"></div>
            <!-- V·ªãt s·∫Ω ƒë∆∞·ª£c t·∫°o ·ªü ƒë√¢y b·∫±ng JavaScript -->
        </div>
    </div>

    <script>
        // D·ªØ li·ªáu danh s√°ch h·ªçc sinh t·ª´ t·ªáp CSV ƒë√£ t·∫£i l√™n
        const studentCsvData = `DANH S√ÅCH H·ªåC SINH L·ªöP BA 1,,,,,,,
NƒÉm h·ªçc: 2025-2026,,,,,,,
Gi√°o vi√™n ch·ªß nhi·ªám: th·∫ßy H·∫£i Th√†nh,,,,,,,
STT,M√£ ƒë·ªãnh danh B·ªô GD&ƒêT,H·ªç t√™n,Ng√†y sinh,Gi·ªõi t√≠nh,D√¢n t·ªôc,SƒêT li√™n h·ªá,
1,7977249479,Nguy·ªÖn Ho√†ng Ng·ªçc Anh,28/08/2017,N·ªØ,Kinh,0902992188,
2,7955833244,Nguy·ªÖn Tr√¢m Anh,08/08/2017,N·ªØ,Kinh,0945945068,
3,7955673713,Tr·∫ßn Ng·ªçc Nh√£ Anh,05/04/2017,N·ªØ,Kinh,0903031796,
4,9449662296,Nguy·ªÖn L√¢m Gia B·∫£o,28/02/2017,Nam,Kinh,0901467021,
5,7977633400,Tr·∫ßn Nguy·ªát Di,29/03/2017,N·ªØ,Hoa,0937992827,Minh ƒê·∫°o chuy·ªÉn ƒë·∫øn
6,7977249525,Nguy·ªÖn Tr∆∞∆°ng Ho√†ng ƒê·ª©c,06/11/2016,Nam,Kinh,0908631214,
7,7977249526,Tr·∫ßn Nguy·ªÖn Gia H√¢n,19/05/2017,N·ªØ,Kinh,0909192536,
8,7977249483,Hu·ª≥nh Gia Huy,06/04/2017,Nam,Kinh,0339391194,
9,7977249482,Tr·∫ßn Ch√≠ H∆∞ng,19/03/2017,Nam,Hoa,0902466983,
10,7967309846,Tr∆∞∆°ng L√™ Kha,01/03/2017,Nam,Kinh,0903861786,
11,7977249484,Tr·∫ßn Tu·∫•n Kh·∫£i,08/10/2017,Nam,Kinh,0974603739,
12,7955905950,Ph√πng T·∫•n Khang,27/03/2017,Nam,Kinh,0908260609,
13,7968154493,Nguy·ªÖn ƒê·ªó M·ªπ K·ª≥,13/11/2017,N·ªØ,Kinh,0938860382,Ch√≠nh Nghƒ©a chuy·ªÉn ƒë·∫øn
14,7977531138,Tr√¨nh Hi·ªÉu Lan,04/04/2017,N·ªØ,Hoa,094972253...`;

        // B·ªè qua 4 d√≤ng ƒë·∫ßu v√† tr√≠ch xu·∫•t t√™n t·ª´ c·ªôt th·ª© 3 (ch·ªâ s·ªë 2)
        const studentNames = studentCsvData.split('\n')
            .slice(4) // B·ªè qua 4 d√≤ng ti√™u ƒë·ªÅ
            .map(line => {
                const parts = line.split(',');
                return parts.length > 2 ? parts[2].trim() : null; // L·∫•y t√™n t·ª´ c·ªôt th·ª© 3
            })
            .filter(name => name && name !== ''); // L·ªçc t√™n tr·ªëng ho·∫∑c kh√¥ng h·ª£p l·ªá

        const startRaceBtn = document.getElementById('start-race-btn');
        const resetGameBtn = document.getElementById('reset-game-btn');
        const duckRaceTrack = document.getElementById('duck-race-track');
        const winnerDisplay = document.getElementById('winner-display');
        const winnerNameSpan = document.getElementById('winner-name');

        let students = studentNames;
        let raceInterval;
        let isRacing = false;

        // M·∫£ng ch·ª©a c√°c emoji v√† m√†u s·∫Øc kh√°c nhau
        const duckEmojis = ['ü¶Ü', 'üê•', 'üê§', 'üêß', 'ü¶¢', 'üê¶', 'ü¶ú', 'ü¶ö'];
        const duckColors = [
            '#FEE440', '#A9F1DF', '#FF9F1C', '#9FD356', '#546A76',
            '#FF6B6B', '#C77DFF', '#39F2FF', '#FF00A2', '#2F9599'
        ];

        function createDuckLanes() {
            duckRaceTrack.innerHTML = '<div class="finish-line"></div>'; // ƒê·∫£m b·∫£o v·∫°ch ƒë√≠ch lu√¥n ·ªü ƒë√≥
            
            // X√°o tr·ªôn danh s√°ch h·ªçc sinh ƒë·ªÉ th·ª© t·ª± c√°c v·ªãt kh√°c nhau m·ªói l·∫ßn ch∆°i
            const shuffledStudents = [...students].sort(() => Math.random() - 0.5);

            shuffledStudents.forEach((student, index) => {
                const lane = document.createElement('div');
                lane.classList.add('duck-lane');
                
                const duck = document.createElement('div');
                duck.classList.add('duck');
                
                // Ch·ªçn m·ªôt emoji v√† m√†u ng·∫´u nhi√™n cho m·ªói v·ªãt
                const randomEmoji = duckEmojis[Math.floor(Math.random() * duckEmojis.length)];
                const randomColor = duckColors[Math.floor(Math.random() * duckColors.length)];

                duck.textContent = randomEmoji;
                duck.style.color = randomColor;
                duck.dataset.progress = 0; // T·ªëc ƒë·ªô di chuy·ªÉn ban ƒë·∫ßu
                
                const nameSpan = document.createElement('span');
                nameSpan.classList.add('duck-name');
                nameSpan.textContent = student.trim();
                
                lane.appendChild(duck);
                lane.appendChild(nameSpan);
                duckRaceTrack.appendChild(lane);
            });
        }

        function startGame() {
            if (isRacing) return;
            
            if (students.length === 0) {
                // S·ª≠ d·ª•ng m·ªôt h·ªôp tho·∫°i t√πy ch·ªânh thay v√¨ alert
                const message = 'Kh√¥ng t√¨m th·∫•y t√™n h·ªçc sinh n√†o trong danh s√°ch. Vui l√≤ng ki·ªÉm tra l·∫°i t·ªáp tin.';
                const messageBox = document.createElement('div');
                messageBox.classList.add('winner-box');
                messageBox.innerHTML = `<h2>L·ªói!</h2><p>${message}</p>`;
                duckRaceTrack.innerHTML = ''; // X√≥a ƒë∆∞·ªùng ƒëua n·∫øu c√≥
                duckRaceTrack.appendChild(messageBox);
                return;
            }

            isRacing = true;
            winnerDisplay.classList.add('hidden');
            startRaceBtn.disabled = true;
            resetGameBtn.disabled = true;

            createDuckLanes();

            const ducks = document.querySelectorAll('.duck');
            const trackWidth = duckRaceTrack.offsetWidth - 50; // Tr·ª´ ƒëi k√≠ch th∆∞·ªõc v·ªãt

            raceInterval = setInterval(() => {
                let winnerFound = false;

                ducks.forEach(duck => {
                    const randomSpeed = Math.random() * 5 + 1; // T·ªëc ƒë·ªô ng·∫´u nhi√™n t·ª´ 1 ƒë·∫øn 6
                    let currentProgress = parseFloat(duck.dataset.progress);
                    currentProgress += randomSpeed;
                    duck.dataset.progress = currentProgress;

                    // L·∫≠t l·∫°i v·ªãt ƒë·ªÉ h∆∞·ªõng ƒë√∫ng
                    const scaleX = duck.textContent === 'üêß' || duck.textContent === 'üê¶' || duck.textContent === 'ü¶ú' ? 1 : -1;
                    duck.style.transform = `translateX(${currentProgress}px) scaleX(${scaleX})`;

                    // Ki·ªÉm tra xem v·ªãt n√†o v·ªÅ ƒë√≠ch ch∆∞a
                    if (currentProgress >= trackWidth && !winnerFound) {
                        winnerFound = true;
                        
                        const winnerDuck = duck;
                        const winnerName = winnerDuck.nextElementSibling.textContent;

                        // D·ª´ng tr√≤ ch∆°i
                        clearInterval(raceInterval);
                        isRacing = false;
                        resetGameBtn.disabled = false;
                        startRaceBtn.disabled = false;

                        // Hi·ªÉn th·ªã ng∆∞·ªùi chi·∫øn th·∫Øng
                        winnerNameSpan.textContent = winnerName;
                        winnerDisplay.classList.remove('hidden');
                        
                        // B·∫Øn ph√°o gi·∫•y ch√∫c m·ª´ng
                        launchConfetti();
                    }
                });
            }, 50); // C·∫≠p nh·∫≠t v·ªã tr√≠ m·ªói 50ms
        }

        // H√†m t·∫°o hi·ªáu ·ª©ng ph√°o gi·∫•y
        function launchConfetti() {
            const defaults = {
                spread: 360,
                ticks: 100,
                gravity: 0.7,
                decay: 0.9,
                startVelocity: 30,
                shapes: ['circle', 'square', 'star'],
                scalar: 0.8,
            };
            
            function shoot() {
                confetti({
                    ...defaults,
                    particleCount: 25,
                    origin: { y: 0.8, x: Math.random() },
                });
            }

            // B·∫Øn ph√°o gi·∫•y li√™n t·ª•c trong m·ªôt kho·∫£ng th·ªùi gian ng·∫Øn
            setTimeout(shoot, 0);
            setTimeout(shoot, 100);
            setTimeout(shoot, 200);
        }

        function resetGame() {
            clearInterval(raceInterval);
            isRacing = false;
            winnerDisplay.classList.add('hidden');
            duckRaceTrack.innerHTML = '';
            startRaceBtn.disabled = false;
            resetGameBtn.disabled = false;
            // Kh√¥ng x√≥a danh s√°ch h·ªçc sinh v√¨ n√≥ ƒë∆∞·ª£c t√≠ch h·ª£p s·∫µn
        }

        // T·ª± ƒë·ªông t·∫°o c√°c l√†n ƒëua khi trang ƒë∆∞·ª£c t·∫£i l·∫ßn ƒë·∫ßu
        document.addEventListener('DOMContentLoaded', () => {
            if (students.length > 0) {
                createDuckLanes();
            }
        });

        startRaceBtn.addEventListener('click', startGame);
        resetGameBtn.addEventListener('click', resetGame);

    </script>

</body>
</html>
